<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Opencl on oneAPI Community Page</title>
    <link>http://oneapi-community.github.io/tags/opencl/</link>
    <description>Recent content in Opencl on oneAPI Community Page</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Dec 2024 12:04:00 -0800</lastBuildDate>
    <atom:link href="http://oneapi-community.github.io/tags/opencl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Parallel computing in practice</title>
      <link>http://oneapi-community.github.io/projects/parallel_computing_in_practice/</link>
      <pubDate>Fri, 13 Dec 2024 12:04:00 -0800</pubDate>
      <guid>http://oneapi-community.github.io/projects/parallel_computing_in_practice/</guid>
      <description>&lt;p&gt;Examples of deploying and computing with SYCL, OpenCL, Level Zero and OpenMP on GPU devices for enhanced parallel performance&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vivid OneAPI JSupercomputing</title>
      <link>http://oneapi-community.github.io/projects/vivid-oneapi-jsupercomputing/</link>
      <pubDate>Fri, 04 Oct 2024 19:19:06 -0700</pubDate>
      <guid>http://oneapi-community.github.io/projects/vivid-oneapi-jsupercomputing/</guid>
      <description>&lt;p&gt;The ViVid project aims to improve the implementation and optimization of algorithms for handling massive data flows, using oneAPI in heterogeneous architectures, mainly with CPU+GPU, and eventually FPGA. The methodology consists of selecting appropriate algorithms, developing code and dependencies using oneAPI, identifying and solving performance bottlenecks, and maximizing parallelization. Our goal is to achieve significant advances in real-time processing of large volumes of data, efficiently leveraging the performance of state-of-the-art heterogeneous architectures.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RayBNN_Raytrace</title>
      <link>http://oneapi-community.github.io/projects/raybnn_raytrace/</link>
      <pubDate>Sun, 23 Jun 2024 14:21:24 -0700</pubDate>
      <guid>http://oneapi-community.github.io/projects/raybnn_raytrace/</guid>
      <description>&lt;p&gt;Ray tracing library using GPUs, CPUs, and FPGAs via CUDA, OpenCL, and oneAPI&lt;/p&gt;</description>
    </item>
    <item>
      <title>RayBNN_Graph</title>
      <link>http://oneapi-community.github.io/projects/raybnn_graph/</link>
      <pubDate>Sun, 23 Jun 2024 14:20:12 -0700</pubDate>
      <guid>http://oneapi-community.github.io/projects/raybnn_graph/</guid>
      <description>&lt;p&gt;Graph Manipulation Library For GPUs, CPUs, and FPGAs via CUDA, OpenCL, and oneAPI&lt;/p&gt;</description>
    </item>
    <item>
      <title>RayBNN_Neural</title>
      <link>http://oneapi-community.github.io/projects/raybnn_neural/</link>
      <pubDate>Sun, 23 Jun 2024 14:17:48 -0700</pubDate>
      <guid>http://oneapi-community.github.io/projects/raybnn_neural/</guid>
      <description>&lt;p&gt;Neural Networks with Sparse Weights in Rust using GPUs, CPUs, and FPGAs via CUDA, OpenCL, and oneAPI&lt;/p&gt;</description>
    </item>
    <item>
      <title>oneAPI Construction Kit</title>
      <link>http://oneapi-community.github.io/projects/oneapi-construction-kit/</link>
      <pubDate>Sun, 23 Jun 2024 14:00:53 -0700</pubDate>
      <guid>http://oneapi-community.github.io/projects/oneapi-construction-kit/</guid>
      <description>&lt;p&gt;The oneAPI Construction Kit is a framework to provide implementations of open standards, such as OpenCL and Vulkan, for a wide range of devices. The oneAPI Construction Kit can be used to build with the oneAPI Toolkit. The oneAPI Toolkit includes support for various open standards, such as OpenMP, SYCL, and DPC++. DPC++ is based on the SYCL programming model, which allows to write single-source C++ code that can target both CPUs and GPUs.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
